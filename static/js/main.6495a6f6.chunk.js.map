{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","result","setResult","inputRef","useRef","useEffect","current","focus","handleClick","e","concat","target","name","backspace","slice","length","clear","Calculate","eval","toString","err","className","type","value","ref","onClick","id","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"40BAGA,SAASA,MAAO,IAAD,UACaC,oDAAS,IADtB,mLACPC,OADO,cACAC,UADA,cAEPC,SAAWC,kDAAO,MAExBC,sDAAU,kBAAMF,SAASG,QAAQC,WAEjC,IAAMC,YAAc,SAACC,GACnBP,UAAUD,OAAOS,OAAOD,EAAEE,OAAOC,QAE7BC,UAAY,WAChBX,UAAUD,OAAOa,MAAM,EAAEb,OAAOc,OAAO,KAGnCC,MAAQ,WACZd,UAAU,KAENe,UAAY,SAAZA,YACJ,IACEf,UAAUgB,KAAKjB,QAAQkB,YAEzB,MAAMC,KACJlB,UAAU,WAGd,OACE,mEAAKmB,UAAU,WAAf,UACE,4EACE,oEAAOC,KAAK,OAAOC,MAAOtB,OAAQuB,IAAKrB,aAEzC,mEAAKkB,UAAU,SAAf,UACG,qEAAQI,QAAST,MAAOU,GAAG,QAA3B,mBACA,qEAAQD,QAASZ,UAAWa,GAAG,YAA/B,eACA,qEAAQd,KAAK,IAAIa,QAASjB,YAA1B,eACA,qEAAQI,KAAK,IAAIa,QAASjB,YAA1B,eACA,qEAAQI,KAAK,IAAIa,QAASjB,YAA1B,eACA,qEAAQI,KAAK,IAAIa,QAASjB,YAA1B,eACA,qEAAQI,KAAK,IAAIa,QAASjB,YAA1B,eACA,qEAAQI,KAAK,IAAIa,QAASjB,YAA1B,eACA,qEAAQI,KAAK,IAAIa,QAASjB,YAA1B,eACA,qEAAQI,KAAK,IAAIa,QAASjB,YAA1B,eACA,qEAAQI,KAAK,IAAIa,QAASjB,YAA1B,kBACA,qEAAQI,KAAK,IAAIa,QAASjB,YAA1B,eACA,qEAAQI,KAAK,IAAIa,QAASjB,YAA1B,eACA,qEAAQI,KAAK,IAAIa,QAASjB,YAA1B,eACA,qEAAQI,KAAK,IAAIa,QAASjB,YAA1B,eACA,qEAAQI,KAAK,IAAIa,QAASjB,YAA1B,eACA,qEAAQI,KAAK,IAAIa,QAASjB,YAA1B,eACA,qEAAQkB,GAAG,SAASD,QAASR,UAA7B,0BAMMlB,2B,wIC5CA4B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACvC,EAAA,EAAD,MAEFwC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.6495a6f6.chunk.js","sourcesContent":["import React, {useState,useRef,useEffect} from 'react'\nimport './App.css';\n\nfunction App() {\n  const[result,setResult] = useState(\"\");\n  const inputRef = useRef(null);\n\n  useEffect(() => inputRef.current.focus());\n\n  const handleClick = (e) => {\n    setResult(result.concat(e.target.name));\n  } \n  const backspace = () => {\n    setResult(result.slice(0,result.length-1))\n  }\n\n  const clear = () => {\n    setResult(\"\");\n  }\n  const Calculate = () => {\n    try{\n      setResult(eval(result).toString());\n    }\n    catch(err) {\n      setResult(\"Error\")\n    }\n  }\n  return (\n    <div className=\"Calc-App\">\n      <form>\n        <input type=\"text\" value={result} ref={inputRef}></input>\n      </form>\n      <div className=\"keypad\">\n         <button onClick={clear} id=\"clear\">Clear</button>\n         <button onClick={backspace} id=\"backspace\">C</button>\n         <button name=\"+\" onClick={handleClick}>+</button>\n         <button name=\"7\" onClick={handleClick}>7</button>\n         <button name=\"8\" onClick={handleClick}>8</button>\n         <button name=\"9\" onClick={handleClick}>9</button>\n         <button name=\"-\" onClick={handleClick}>-</button>\n         <button name=\"4\" onClick={handleClick}>4</button>\n         <button name=\"5\" onClick={handleClick}>5</button>\n         <button name=\"6\" onClick={handleClick}>6</button>\n         <button name=\"*\" onClick={handleClick}>&times;</button>\n         <button name=\"1\" onClick={handleClick}>1</button>\n         <button name=\"2\" onClick={handleClick}>2</button>\n         <button name=\"3\" onClick={handleClick}>3</button>\n         <button name=\"/\" onClick={handleClick}>/</button>\n         <button name=\"0\" onClick={handleClick}>0</button>\n         <button name=\".\" onClick={handleClick}>.</button>\n         <button id=\"result\" onClick={Calculate}>Result</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}